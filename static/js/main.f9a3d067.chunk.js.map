{"version":3,"sources":["images/pkd.jpg","images/pkd.png","components/HomeComponent.js","components/ResumeComponent.js","components/ProjectComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/NavBarComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","typedContainer","position","top","left","transform","textAlign","zIndex","breakpoints","up","marginLeft","typedHeader","color","colors","common","white","fontWeight","fontFamily","typedSubHeader","indigo","particlesContainer","marginTop","background","Home","classes","Box","className","Typography","variant","strings","typeSpeed","startDelay","loop","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","width","image","src","nodeImg","height","size","random","anim","speed","size_min","sync","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","distance","line_linked","opacity","bubble","duration","repulse","push","particles_nb","remove","retina_detect","Resume","props","Projects","Contact","About","drawerPaper","backgroundColor","borderRight","drawer","flexShrink","toolbar","mixins","avatar","display","margin","spacing","border","listItem","paddingLeft","lightBlue","listItemText","fontSize","menuItems","listIcon","listText","listPath","title","selected","Info","AssignmentInd","Apps","FeedbackSharp","MenuBar","mobileOpen","setMobileOpen","setTitle","console","log","handleDrawerToggle","window","container","undefined","document","body","Hidden","mdUp","implementation","Drawer","style","anchor","open","onClose","paper","ModalProps","keepMounted","Avatar","profileImg","alt","Divider","marginBottom","List","marginRight","map","item","key","ListItem","button","component","Link","to","onClick","ListItemIcon","ListItemText","primary","smDown","id","filter","indexOf","appBar","menuButton","NavBar","AppBar","Toolbar","IconButton","edge","content","flexGrow","padding","Main","React","useState","exact","path","App","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9a3d067.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pkd.37a66977.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pkd.9bb5ad68.png\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Typography, colors } from '@material-ui/core';\r\nimport Typed from 'react-typed';\r\nimport '../App.css';\r\nimport Particales from 'react-particles-js';\r\nimport nodeImg from '../images/pkd.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typedContainer: {\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        textAlign: 'center',\r\n        zIndex: 1,\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft:100\r\n        }\r\n    },\r\n    typedHeader:{\r\n        color: colors.common.white,\r\n        fontWeight:'lighter',\r\n        fontFamily: 'Nunito,sans-serif;'\r\n    },\r\n    typedSubHeader:{\r\n        color: colors.indigo[200],\r\n    },\r\n    particlesContainer:{\r\n        position:'fixed',\r\n        marginTop:-40, \r\n        marginLeft: -25,\r\n        background: '#191d2d'\r\n    }\r\n\r\n}))\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Box className={classes.typedContainer}>\r\n                <Typography variant='h3' >\r\n                    <Typed className={classes.typedHeader} strings={['Hi, I am Pasan Dewasurendra']} typeSpeed={40} />\r\n                </Typography>\r\n                <br />\r\n                <Typography variant='h5' >\r\n                    <Typed className={classes.typedSubHeader} startDelay={2000} strings={[' I am a full stack web developer.','I can provide clean code and  creative ideas.','I also make website more interactive with web animations.']}\r\n                    typeSpeed={40} loop />\r\n                </Typography>  \r\n            </Box>\r\n\r\n            <Particales canvasClassName={classes.particlesContainer}\r\n                params={{\r\n                    particles: {\r\n                        number:{\r\n                            value: 50,\r\n                            density: {\r\n                            enable: true,\r\n                            value_area: 900\r\n                            }\r\n                        },\r\n                        color:{\r\n                            value: '#a4acc4'\r\n                        },\r\n                        shape: {\r\n                            type:\"circle\",\r\n                            stroke:\r\n                            {\r\n                                width: 1,\r\n                                color: '#fff'\r\n                            },\r\n                            image:{\r\n                                src: nodeImg,\r\n                                width:100,\r\n                                height:100\r\n                            }\r\n                        },\r\n                        size:{\r\n                            value: 8,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 6,\r\n                                size_min: 0.1,\r\n                                sync: true\r\n                            }\r\n                        },\r\n                        move: {\r\n                            enable: true,\r\n                            speed: 3,\r\n                            direction: \"none\",\r\n                            random: false,\r\n                            straight: false,\r\n                            out_mode:\"destroy\",\r\n                            bounce: false,\r\n                            attract: {\r\n                                enable: false,\r\n                                rotateX: 600,\r\n                                rotateY: 1200\r\n                            }\r\n                        }\r\n                    },\r\n                    interactivity: {\r\n                        detect_on: \"canvas\",\r\n                        events: {\r\n                            onhover: {\r\n                                enable: true,\r\n                                mode:[\"bubble\",\"grab\"]\r\n                            },\r\n                            onclick: {\r\n                                enable: true,\r\n                                mode: \"push\"\r\n                            },\r\n                            resize: true\r\n                        },\r\n                        modes: {\r\n                            grab: {\r\n                                distance: 800,\r\n                                line_linked: {\r\n                                    opacity: 0.2\r\n                                }\r\n                            },\r\n                            bubble: {\r\n                                distance: 500,\r\n                                size: 30,\r\n                                duration: 2,\r\n                                opacity: 0.8,\r\n                                speed: 3\r\n                            },\r\n                            repulse: {\r\n                                distance: 150,\r\n                                duration: 0.6\r\n                            },\r\n                            push: {\r\n                                particles_nb: 4\r\n                            },\r\n                            remove: {\r\n                                particles_nb: 2\r\n                            }\r\n                        }\r\n                    },\r\n                    retina_detect: true\r\n                }} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nconst Resume = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>this is resume component</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react'\r\n\r\n\r\nconst Projects = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is Project Component</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Projects;","import React from 'react'\r\n\r\nconst Contact =(props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is Contact Component</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react'\r\n\r\nconst About = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>This is About Component</h2>\r\n            <p>#This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.This is About Component.\r\n                This is About Component.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Avatar, Divider, colors, Hidden } from '@material-ui/core';\r\nimport {Home, AssignmentInd, Apps, FeedbackSharp, Info } from '@material-ui/icons';\r\nimport profileImg from '../images/pkd.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerPaper: {\r\n        width: 'inherit',\r\n        backgroundColor: '#191d2b',\r\n        borderRight:'1px solid #363b4d'\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n          width: 300,\r\n          flexShrink: 0,\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    \r\n    avatar: {\r\n        display: \"block\",\r\n        margin: \"0.5rem auto\",\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        marginTop: theme.spacing(5),\r\n        border: '2px solid #1084c7'\r\n    },\r\n    listItem: {\r\n        marginTop: theme.spacing(1),\r\n        color:'#a4acc4',\r\n        paddingLeft: '25%',\r\n        '&:hover': {\r\n            backgroundColor: colors.lightBlue[800],\r\n            color: '#a4acc4'\r\n        },\r\n        \r\n     },\r\n     listItemText:{\r\n        fontSize:'1.2em'  \r\n    }\r\n\r\n}))\r\n\r\nconst menuItems = [\r\n    {\r\n        listIcon: <Home fontSize='large' />,\r\n        listText: 'Home',\r\n        listPath: '/',\r\n        title: 'Welcome to My Profile',\r\n        selected: true\r\n    },\r\n    {\r\n        listIcon: <Info fontSize='large' />,\r\n        listText: 'About',\r\n        listPath: '/about',\r\n        title: 'Who is Pasan Dewasurendra',\r\n        selected: false\r\n    },\r\n    {\r\n        listIcon: <AssignmentInd fontSize='large' />,\r\n        listText: 'Resume',\r\n        listPath: '/resume',\r\n        title: 'My Resume',\r\n        selected: false\r\n    },\r\n    {\r\n        listIcon: <Apps fontSize='large' />,\r\n        listText: 'Project',\r\n        listPath: '/project',\r\n        title: 'What are my Projects',\r\n        selected: false\r\n    },\r\n    {\r\n        listIcon: <FeedbackSharp fontSize='large' />,\r\n        listText: 'Contact',\r\n        listPath: '/contact',\r\n        title: 'Contact me on here or lets give a feedback',\r\n        selected: false\r\n    }   \r\n]\r\n\r\nconst MenuBar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const {mobileOpen, setMobileOpen} = props;\r\n    const {setTitle} = props;\r\n    console.log('setitile : '+setTitle)\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const itemSelected = (id) => {\r\n        menuItems[id].selected = true;\r\n        console.log( menuItems.filter(item => menuItems.indexOf(item) !== id))\r\n        menuItems.filter(item => menuItems.indexOf(item) !== id).map(item => item.selected = false)\r\n    }\r\n\r\n    const { window } = props;\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <nav className={classes.drawer}>\r\n            <Hidden mdUp implementation=\"css\">\r\n                <Drawer container={container} style={{width: '300px'}} variant='temporary' anchor='left' open={mobileOpen} onClose={handleDrawerToggle} classes={{paper: classes.drawerPaper}} ModalProps={{keepMounted:true}} >\r\n                    <Avatar className={classes.avatar} src={profileImg} alt='Pasan Dewasurendra' />\r\n                    <Divider style={{marginBottom: 20, marginTop: '3em',  backgroundColor:'#363b4d'}} />   \r\n                    <List style={{marginLeft:5, marginRight:5}} >\r\n                        {menuItems.map((item, key) => (\r\n                            <ListItem className={classes.listItem} button key={key} component={Link} to={item.listPath} onClick={() => {handleDrawerToggle(); setTitle(item.title)} }>\r\n                                <ListItemIcon style={{color:'#a4acc4'}}> {item.listIcon} </ListItemIcon>\r\n                                <ListItemText classes={{primary:classes.listItemText}} primary={item.listText} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Hidden>\r\n\r\n            <Hidden smDown implementation=\"css\">\r\n                <Drawer  style={{width: '300px'}} classes={{paper: classes.drawerPaper}} variant='permanent' open >\r\n                    <Avatar className={classes.avatar} src={profileImg} alt='Pasan Dewasurendra' />\r\n                    <Divider style={{marginBottom: 20, marginTop: '3em', backgroundColor:'#363b4d'}} />   \r\n                    <List style={{marginLeft:5, marginRight:5}}>\r\n                        {menuItems.map((item, key) => (\r\n                            <ListItem className={classes.listItem} button key={key} component={Link} to={item.listPath} selected={item.selected} onClick={() => {setTitle(item.title); itemSelected(key) }}>\r\n                                <ListItemIcon style={{color:'#a4acc4'}}> {item.listIcon} </ListItemIcon>\r\n                                <ListItemText classes={{primary:classes.listItemText}} primary={item.listText} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Hidden> \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default MenuBar;\r\n","import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Typography, colors } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        [theme.breakpoints.up('md')]: {\r\n          width: `calc(100% - 300px)`,\r\n          marginLeft: 300\r\n        },\r\n        backgroundColor: colors.lightBlue[900]\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'none',\r\n        },\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst NavBar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const {mobileOpen, setMobileOpen} = props;\r\n//    console.log('nav toggler: '+ mobileOpen+' , '+setMobileOpen)\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    return(\r\n            <AppBar position='fixed' className={classes.appBar} >\r\n                <Toolbar>\r\n                    <IconButton color='inherit' edge='start' className={classes.menuButton} onClick={handleDrawerToggle}>\r\n                        <MenuIcon fontSize='large'/>\r\n                    </IconButton>\r\n                    <Typography variant=\"overline\">{props.title}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport Home from './HomeComponent';\r\nimport Resume from './ResumeComponent';\r\nimport Project from './ProjectComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport MenuBar from './MenuComponent';\r\nimport { Route } from 'react-router-dom';\r\nimport NavBar from './NavBarComponent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    marginTop:theme.spacing(10)\r\n  },\r\n}));\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [title, setTitle] = React.useState('Pasan Dewasurendra');\r\n\r\n    console.log('main setTitle: '+title)\r\n\r\n    return (\r\n      <div style={{display:'flex'}}>\r\n        <NavBar title={title} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen}/>\r\n        <MenuBar setTitle={setTitle} mobileOpen={mobileOpen} setMobileOpen={setMobileOpen}/>\r\n        <main className={classes.content}>\r\n          <Route exact path=\"/\"  component={() => <Home />} />\r\n          <Route exact path=\"/my-portfolio\"  component={() => <Home />} />\r\n          <Route path=\"/about\"   component={() => <About />} />\r\n          <Route path=\"/resume\"  component={() => <Resume />} />\r\n          <Route path=\"/project\" component={() => <Project />} />\r\n          <Route path=\"/contact\" component={() => <Contact />} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Main;","import React from 'react';\nimport Main from './components/MainComponent';\nimport { CssBaseline } from '@material-ui/core';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <CssBaseline />\n      <Main />\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}